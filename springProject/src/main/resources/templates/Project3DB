DROP database PROJECT3;
CREATE database PROJECT3;

DROP USER 'project_host'@'localhost';
CREATE USER 'project_host'@'localhost' IDENTIFIED WITH mysql_native_password BY '1234';

GRANT SELECT, INSERT, UPDATE, DELETE on PROJECT3.* to 'project_host'@'localhost';

USE PROJECT3;

CREATE TABLE user (
  user_id varchar(255) NOT NULL,
  user_pw varchar(255) NOT NULL,
  user_name varchar(255) NOT NULL,
  user_phone varchar(255) NOT NULL,
  user_email varchar(255) NOT NULL,
  user_addr_postcode varchar(255) NOT NULL,
  user_addr_main varchar(255) NOT NULL,
  user_addr_detail varchar(255) NOT NULL,
  user_addr_extra varchar(255) NOT NULL DEFAULT '(없음)',
  CONSTRAINT PRIMARY KEY (user_id),
  CONSTRAINT UNIQUE KEY (user_phone),
  CONSTRAINT UNIQUE KEY (user_email)
);
INSERT INTO USER(user_id,user_pw,user_name,user_phone,user_email,user_addr_postcode,user_addr_main,user_addr_detail,user_addr_extra)
values ('user001','u1234','김유저','010-1111-0001','user1@gmail.com','04038','서울시 마포구 양화로 122','B1층','(서교동)'),
('user002','u1234','이유저','010-2222-0002','user2@gmail.com','04038','서울시 마포구 양화로 122','1층','(서교동)'),
('user003','u1234','박유저','010-3333-0003','user3@gmail.com','04038','서울시 마포구 양화로 122','2층','(서교동)'),
('user004','u1234','최유저','010-4444-0004','user4@gmail.com','04038','서울시 마포구 양화로 122','3층','(서교동)'),
('user005','u1234','한유저','010-5555-0005','user5@kakao.com','04038','서울시 마포구 양화로 122','4층','(서교동)'),
('user006','u1234','안유저','010-6666-0006','user6@naver.com','04038','서울시 마포구 양화로 122','5층','(서교동)'),
('user007','u1234','강유저','010-7777-0007','user7@naver.com','04038','서울시 마포구 양화로 122','6층','(서교동)'),
('user008','u1234','양유저','010-8888-0008','user8@naver.com','04038','서울시 마포구 양화로 122','7층','(서교동)'),
('user009','u1234','류유저','010-9999-0009','user9@naver.com','04038','서울시 마포구 양화로 122','8층','(서교동)'),
('user010','u1234','정유저','010-1010-0010','user10@daum.net','04038','서울시 마포구 양화로 122','9층','(서교동)');

CREATE TABLE category (
  category_no int NOT NULL,
  category_name varchar(255) NOT NULL,
  category_code varchar(255) NOT NULL,
  category_root varchar(255),
  CONSTRAINT PRIMARY KEY (category_code),
  FOREIGN KEY(category_root) REFERENCES CATEGORY(category_code)
  ON UPDATE CASCADE ON DELETE CASCADE
);

INSERT INTO CATEGORY(category_no,category_name,category_code)
values (1,'노트북','100000');
	INSERT INTO CATEGORY(category_no,category_name,category_code,category_root)
	values (2, '제조사','101000','100000');
		INSERT INTO CATEGORY(category_no,category_name,category_code,category_root)
		values (3, 'ASUS','101001','101000'),    
			(3, 'HP','101002','101000'),
			(3, 'LG','101003','101000');
	INSERT INTO CATEGORY(category_no,category_name,category_code,category_root)
	values (2, 'CPU종류','102000','100000');
		INSERT INTO CATEGORY(category_no,category_name,category_code,category_root)
		values (3, 'AMD라이젠9-5','102001','102000'),
			(3, '인텔코어i9-12','102002','102000'),
			(3, '아톰','102003','102000');
INSERT INTO CATEGORY(category_no,category_name,category_code)
values (1,'데스크탑','200000');
	INSERT INTO CATEGORY(category_no,category_name,category_code,category_root)
	values (2, '제조사','201000','200000');
		INSERT INTO CATEGORY(category_no,category_name,category_code,category_root)
		values (3, 'ASUS','201001','201000'),    
			(3, 'HP','201002','201000'),
			(3, 'LG','201003','201000');
	INSERT INTO CATEGORY(category_no,category_name,category_code,category_root)
	values (2, 'CPU종류','202000','200000');
		INSERT INTO CATEGORY(category_no,category_name,category_code,category_root)
		values (3, 'AMD라이젠7-5','202001','202000'),
			(3, '인텔코어i9-12','202002','202000');

CREATE TABLE notebook (
  division_code int NOT NULL,
  notebook_name varchar(255) NOT NULL,
  maker varchar(255) DEFAULT NULL,
  main_cpu varchar(255) DEFAULT NULL,
  screen_size float DEFAULT NULL,
  memory_size varchar(255) DEFAULT NULL,
  storage_size varchar(255) DEFAULT NULL,
  weight float DEFAULT NULL,
  CONSTRAINT PRIMARY KEY (division_code)
);
INSERT INTO NOTEBOOK(division_code,notebook_name,maker,main_cpu,screen_size,memory_size,storage_size,weight)
values (001,'ASUS TUF Gaming A15 FA507RM-R6725','ASUS','AMD라이젠9-5',15.6,'16GB','512GB',1.9),
(002,'ASUS 젠북 14X OLED UM5401QA-KN030','ASUS','AMD라이젠9-4',14.0,'16GB','512GB',1.4),
(003,'HP 빅터스 15-fa0051TX ','HP','인텔코어i5-12',15.6,'8GB','256GB',2.29),
(004,'HP Nero 15s-eq3043AU ','HP','AMD라이젠5-4',15.6,'8GB','256GB',1.69),
(005,'LG전자 2022 울트라PC 15UD40Q-GX30K WIN10','LG','AMD라이젠3-4',15.6,'8GB','256GB',1.75),
(006,'LG전자 2022 그램360 16TD90Q-GX56K','LG','인텔코어i5-12',15.6,'16GB','256GB',1.48),
(007, 'ASUS ROG STRIX G17 G713RM-LL121', 'ASUS', 'AMD라이젠7-5', 17.3, '8GB', '512GB', 2.9),
(008, 'HP 빅터스 16-d1142TX', 'HP', '인텔코어i7-12', 16.1, '16GB', '256GB', 2.46),
(009, 'HP 오멘 16-c0146AX', 'HP', 'AMD라이젠7-4', 16.1,'16GB', '512GB', 2.32),
(010, 'LG전자 2022 그램15 15ZD95P-GX56K', 'LG', '인텔코어i5-12', 15.6, '16GB', '256GB', 1.12);

CREATE TABLE shipping (
  shipping_id varchar(255) NOT NULL,
  shipping_name varchar(255) NOT NULL,
  shipping_phone varchar(255) NOT NULL,
  shipping_fee int NOT NULL DEFAULT 0,
  CONSTRAINT PRIMARY KEY (shipping_id)
);
INSERT INTO SHIPPING(shipping_id,shipping_name,shipping_phone,shipping_fee)
values ('shipping1','CJ대한통운','1588-1255',3000),
('shipping2','롯데글로벌로지스','1588-2121',3000),
('shipping3','한진택배','1588-0011',3000),
('shipping4','우체국택배','1588-1300',3000),
('shipping5','로젠택배','1588-9988',3000);

CREATE TABLE product (
  prod_id varchar(255) NOT NULL,
  prod_name varchar(255) NOT NULL,
  prod_price int NOT NULL DEFAULT 0,
  prod_stock int NOT NULL DEFAULT 0,
  category_code varchar(255) NOT NULL,
  prod_img varchar(255) DEFAULT NULL,
  division_code int NOT NULL,
  good int NOT NULL DEFAULT 0,
  shipping_id varchar(255) NOT NULL,
  CONSTRAINT PRIMARY KEY (prod_id),
  FOREIGN KEY(category_code) REFERENCES CATEGORY(category_code)
  ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY(division_code) REFERENCES NOTEBOOK(division_code)
  ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY(shipping_id) REFERENCES SHIPPING(shipping_id)
  ON UPDATE CASCADE ON DELETE CASCADE
);

INSERT INTO product (prod_id, prod_name, prod_price, prod_stock, category_code, division_code, good, shipping_id)
values ('product01', 'ASUS 젠북 14X OLED UM5401QA-KN030',  1299000, 100, '101001', 002, 1, 'shipping3'),
('product02', 'ASUS TUF Gaming A15 FA507RM-R6725',  1205000, 80, '101001', 001, 2, 'shipping3'),
('product03', 'HP 빅터스 15-fa0051TX ',  799000, 120, '101002', 003, 3, 'shipping3'),
('product04', 'HP Nero 15s-eq3043AU', 469000, 100, '101002', 004, 5, 'shipping1'),
('product05', 'LG전자 2022 울트라PC 15UD40Q-GX30K WIN10',  529000, 20, '101003', 005, 7, 'shipping4'),
('product06', 'LG전자 2022 그램360 16TD90Q-GX56K', 1697250, 10, '201003', 006, 15, 'shipping1'),
('product07', 'ASUS ROG STRIX G17 G713RM-LL121', 1898990, 30, '201001', 007, 2, 'shipping3'),
('product08', 'HP 빅터스 16-d1142TX', 1445000, 60, '201002', 008, 4, 'shipping2'),
('product09', 'HP 오멘 16-c0146AX', 1399000, 100, '201002', 009, 5, 'shipping1'),
('product10', 'LG전자 2022 그램15 15ZD95P-GX56K', 12489900, 30, '201003', 010, 7, 'shipping4');


CREATE TABLE ordersheet (
  order_no int NOT NULL,
  user_id varchar(255) NOT NULL,
  order_type varchar(255) NOT NULL,
  order_time datetime DEFAULT CURRENT_TIMESTAMP(),
  CONSTRAINT PRIMARY KEY (order_no),
  FOREIGN KEY(user_id) REFERENCES USER(user_id)
  ON UPDATE CASCADE ON DELETE CASCADE
);

INSERT INTO ordersheet (order_no, user_id, order_type, order_time) 
values (001, 'user001', 'card', '2022-01-31 22:59:59'),
(002, 'user002', 'depositor', '2022-02-01 21:59:59'),
(003, 'user003', 'depositor', '2022-01-30 20:59:59'),
(004, 'user004', 'card', '2022-01-29 19:59:59'),
(005, 'user005', 'card', '2022-01-28 18:59:59'),
(006, 'user006', 'card', '2022-01-27 18:59:59'),
(007, 'user007', 'card', '2022-01-26 18:59:59'),
(008, 'user008', 'card', '2022-01-25 18:59:59'),
(009, 'user009', 'card', '2022-01-24 18:59:59'),
(010, 'user010', 'card', '2022-01-23 18:59:59');

CREATE TABLE orderlist (
  orderlist_no int NOT NULL,
  order_no int NOT NULL,
  prod_id varchar(255) NOT NULL,
  order_qty int NOT NULL DEFAULT 0,
  CONSTRAINT PRIMARY KEY (orderlist_no),
  FOREIGN KEY(order_no) REFERENCES ORDERSHEET(order_no)
  ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY(prod_id) REFERENCES PRODUCT(prod_id)
  ON UPDATE CASCADE ON DELETE CASCADE
);

INSERT INTO orderlist (orderlist_no, order_no, prod_id, order_qty)
values (1, 001, 'product01', 1),
(2, 002, 'product02', 1),
(3, 003, 'product03', 1),
(4, 004, 'product04', 1),
(5, 005, 'product05', 2);

CREATE TABLE review (
  review_no int NOT NULL,
  prod_id varchar(255) NOT NULL,
  user_id varchar(255) NOT NULL,
  review_title varchar(255) NOT NULL,
  review_content varchar(255) NOT NULL,
  review_img varchar(255) DEFAULT NULL,
  review_score int NOT NULL DEFAULT 0,
  review_time datetime DEFAULT CURRENT_TIMESTAMP(),
  CONSTRAINT PRIMARY KEY (review_no),
  FOREIGN KEY(prod_id) REFERENCES PRODUCT(prod_id)
  ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY(user_id) REFERENCES USER(user_id)
  ON UPDATE CASCADE ON DELETE CASCADE
);

INSERT INTO review (review_no, prod_id, user_id, review_title, review_content, review_score, review_time)
values (1, 'product01', 'user001', 'user1가 쓴 1번 리뷰입니다.', '리뷰내용입니다.', 5, '2022-01-30 23:59:59'),
(2, 'product02', 'user002', 'user2가 쓴 2번 리뷰입니다.', '리뷰내용입니다.', 4, '2022-01-29 23:59:59'),
(3, 'product03', 'user003', 'user3가 쓴 3번 리뷰입니다.', '리뷰내용입니다.', 3, '2022-01-28 23:59:59'),
(4, 'product04', 'user004', 'user4가 쓴 4번 리뷰입니다.', '리뷰내용입니다.', 2, '2022-01-27 23:59:59'),
(5, 'product05', 'user005', 'user5가 쓴 5번 리뷰입니다.', '리뷰내용입니다.', 5, '2022-01-26 23:59:59'),
(6, 'product01', 'user001', 'user1가 쓴 6번 리뷰입니다.', '리뷰내용입니다.', 5, '2022-01-30 23:59:59');


CREATE TABLE basket (
  basket_no int NOT NULL,
  user_id varchar(255) NOT NULL,
  prod_id varchar(255) NOT NULL,
  CONSTRAINT PRIMARY KEY (basket_no),
  FOREIGN KEY(user_id) REFERENCES USER(user_id)
  ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY(prod_id) REFERENCES PRODUCT(prod_id)
  ON UPDATE CASCADE ON DELETE CASCADE
);

INSERT INTO basket(basket_no, user_id, prod_id)
values (1, 'user001', 'product01'),
(2, 'user002', 'product02'),
(3, 'user003', 'product03'),
(4, 'user004', 'product04'),
(5, 'user005', 'product05');

CREATE TABLE qnaboard (
  qnaboard_no int AUTO_INCREMENT,
  qnaboard_title varchar(255) NOT NULL,
  qnaboard_content varchar(255) NOT NULL,
  user_id varchar(255) NOT NULL,
  post_time DATETIME DEFAULT CURRENT_TIMESTAMP(),
  PRIMARY KEY(qnaboard_no),
  FOREIGN KEY(user_id) REFERENCES USER(user_id)
 ON UPDATE CASCADE ON DELETE CASCADE
);
INSERT INTO QNABOARD (qnaboard_title,qnaboard_content,user_id) VALUES 
('user1 가 쓴 1번 글입니다.','글내용입니다.','user001'),
('user1 가 쓴 2번 글입니다.','글내용입니다.','user001'),
('user1 가 쓴 3번 글입니다.','글내용입니다.','user001'),
('user1 가 쓴 4번 글입니다.','글내용입니다.','user001'),
('user1 가 쓴 5번 글입니다.','글내용입니다.','user001'),
('user2 가 쓴 7번 글입니다.','글내용입니다.','user002'),
('user2 가 쓴 8번 글입니다.','글내용입니다.','user002'),
('user3 가 쓴 9번 글입니다.','글내용입니다.','user003'),
('user4 가 쓴 10번 글입니다.','글내용입니다.','user004'),
('user5 가 쓴 11번 글입니다.','글내용입니다.','user005');

CREATE TABLE faqboard (
  faqboard_no int AUTO_INCREMENT,
  faq_division_no int NOT NULL,
  faqboard_title varchar(255) NOT NULL,
  faqboard_content varchar(255) NOT NULL,
  post_time DATETIME DEFAULT CURRENT_TIMESTAMP(),
  PRIMARY KEY(faqboard_no)
);
INSERT INTO FAQBOARD (faq_division_no, faqboard_title, faqboard_content) VALUES 
(001,'project3.com에서 판매하는 상품은 모두 새 제품인가요?','네, 판매되고 있는 상품은 모두 새제품입니다.'),
(001,'재고가 없다고 나오는 제품도 구입할 수 있나요?','재고센터에 재고가 있는 경우 구입이 가능합니다.'),
(002,'결제방법을 변경할 수 있나요?','네, 주문 후 결제를 완료하기 전이시라면 결제방법을 직접 변경할 수 있습니다.'),
(002,'주문내역은 어디서 확인하나요?','지금까지의 구매 내역은 [마이페이지] > [나의 주문] >[주문내역]에서 확인 가능합니다.'),
(003,'상품마다 배송비가 다른가요?','구매하시는 상품의 크기 및 부피, 박스 개수, 운송방법에 따라 배송비가 차등 적용됩니다.'),
(003,'배송방법은 어떤게 있나요?','신속한 배송과 고객님의 편의를 위하여 일반택배, 퀵서비스, 방문수령 서비스를 제공하고 있습니다.'),
(004,'택배 회수 신청은 어떻게 하나요?','[마이페이지] > [나의 주문] > [A/S·교환·반품 신청]에서 회수 서비스 신청이 가능합니다.'),
(004,'주문자와 다른 명의의 계좌로 환불 받을 수 있나요?','주문자와 입금자가 다른 경우라도 입금해주신 분의 계좌로 환불이 진행되며 이외의 계좌로는 환불이 불가한 점 양해 부탁드립니다.'),
(005,'회원 가입은 아무나 가능한가요?','14세 이상 내/외국인인 경우 본인 인증 후에 회원 가입이 가능합니다.'),
(005,'회원 탈퇴는 어떻게 하나요?','[마이페이지] > [나의 정보] > [내 정보 관리] 에서 [탈퇴] 버튼을 눌러주시면 됩니다. 단, 탈퇴 후 30일간 재가입이 불가능합니다.');